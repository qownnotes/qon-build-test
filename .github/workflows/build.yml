name: 'build'

on:
  push:
    branches:
      - develop
    tags-ignore:
      - '*'
  pull_request:

defaults:
  run:
    working-directory: src

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Set Env
        run: |
          export VERSION=$(cat version.h | sed 's/[^0-9,.]//g')
          export TAG=v${VERSION}.${GITHUB_RUN_ID}.${GITHUB_RUN_NUMBER}
          export RELEASE_TEXT=$(grep -Pzo '## 20.7.4\n(\n|.)+?\n##' CHANGELOG.md | sed '$ d')
          echo "::set-env name=VERSION::${VERSION}"
          echo "::set-env name=TAG::${TAG}"
          echo "::set-env name=RELEASE_TEXT::${RELEASE_TEXT}"
      - name: Printenv
        run: |
          echo "VERSION=${VERSION}"
          echo "TAG=${TAG}"
          printenv
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.VERSION }}
          # TODO: parse from changelog
          body: ${{ env.RELEASE_TEXT }}

  build:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Linux:   https://download.qt.io/online/qtsdkrepository/linux_x64/desktop/
        # macOS:   https://download.qt.io/online/qtsdkrepository/mac_x64/desktop/
        # Windows: https://download.qt.io/online/qtsdkrepository/windows_x86/desktop/
        qt-version: ['5.14.2']
        exclude:
          # xcode not found
          - os: macos-latest
            qt-version: '5.3'
          # xcode not found
          - os: macos-latest
            qt-version: '5.4'
          # win64_mingw73 not found
          - os: windows-latest
            qt-version: '5.3'
          # win64_mingw73 not found
          - os: windows-latest
            qt-version: '5.4'
          # Qt installation times out too often
          - os: windows-latest
            qt-version: '5.13.2'
          # win64_mingw73 not found
          - os: windows-latest
            qt-version: '5.15.0'
          # Download error: decompression get wrong: no output data.
          - os: windows-latest
            qt-version: '5.7'
    steps:
    - uses: actions/checkout@v2	
      with:	
        submodules: true
    - name: Set Env
      shell: bash
      run: |
        export VERSION=$(cat version.h | sed 's/[^0-9,.]//g')
        export TAG=v${VERSION}.${GITHUB_RUN_ID}.${GITHUB_RUN_NUMBER}
        echo "::set-env name=VERSION::${VERSION}"
        echo "::set-env name=TAG::${TAG}"
    - name: Printenv
      shell: bash
      run: |
        echo "VERSION=${VERSION}"
        echo "TAG=${TAG}"
        printenv
    - name: Build project # This would actually build your project, using zip for an example artifact
      shell: bash
      run: |
        zip --junk-paths ./my-artifact-${{ matrix.os }}.zip main.cpp
    - name: ls
      shell: bash
      run: |
        ls
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./src/my-artifact-${{ matrix.os }}.zip
        asset_name: my-artifact-${{ matrix.os }}.zip
        asset_content_type: application/zip
